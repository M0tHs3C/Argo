from exploit.hikvisionExploit import *
from exploit.violaExploit import *
from exploit.avtechExploit import *
from exploit.bticinoExploit import *
from exploit.rspExploit import *
from exploit.geovisionExploit import *
from exploit.goaheadExploit import *
from exploit.atlantisExploit import *
from exploit.anprExploit import *
from exploit.rtspGeneric import *
from exploit.FortiOs import *
from exploit.samipExploit import *
from lib.menuBuilder import *
class exploitMenu:
    def exploitMenu(self):
        exploitMenuSelection= ['Cameras Exploit','VPNs exploit']
        cameraExploitSelection= ['Hikvision',
                                 'Rsp device',
                                 'Viola DVR',
                                 'Avtech DVR',
                                 'Bticino',
                                 'Geovision'
                                 'goAhead',
                                 'atlantis',
                                 'ANPR']
        vpnsExploitSelection = ['FortiOs',
                                'Samip']
        menuBuilder.buildMenu(selectionArray=exploitMenuSelection, title="Exploit menu")
        selection = int(input('[-]Choose an option: '))
        if selection == 1: # SELECTION FOR CAMERA, FOLLOW THIS INDENT
            menuBuilder.buildMenu(selectionArray=cameraExploitSelection, title="Cameras Exploit menu")
            selection = int(input("[-]Choose an option: "))
            if selection == 1 :
                hikExploit = ['Hikvision Exploit', 'default password']
                menuBuilder.buildMenu(selectionArray=hikExploit, title="Hikvision Exploit")
                inputSel = int(input("[-]Choose :"))
                if inputSel == 1:
                    hikvision.hikxploit(self)
                elif inputSel == 2:
                    hikvision.bruteforce(self)
            elif selection == 2:
                rsp = ['RSP Device exploit']
                menuBuilder.buildMenu(selectionArray=rsp, title="RSP device Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    rspExploit.rspExploit(self)
            elif selection == 3:
                Viola = ['Viola DVR exploit (WIP)','Default password bruteforce']
                menuBuilder.buildMenu(selectionArray=Viola,title="Viola DVR Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection ==1:
                    print("[-]Work In Progress.  Not available")
                elif selection ==2:
                    violaExploit.violaBruteForce(self)
            elif selection == 4:
                avtechDvr = ['Exploit','Default password bruteforce']
                menuBuilder.buildMenu(selectionArray=avtechDvr,title="Avtech DVR Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    avtech.avtechExploit(self)
                elif selection == 2:
                    print("[!]Work in progress. Not available")
            elif selection == 5:
                Bticino = ['Bticino exploit','Default password bruteforce']
                menuBuilder.buildMenu(selectionArray=Bticino,title="Bticino Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    pass
                elif selection == 2:
                    bticinoExploit.bticinoBruteForce(self)
            elif selection == 6:
                RSP = ['RSP exploit']
                menuBuilder.buildMenu(selectionArray=RSP,title="RSP Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    geovisionExploit.geovisionExploit(self)
            elif selection == 7:
                goahead = ['GoAhead Exploit']
                menuBuilder.buildMenu(selectionArray=goahead,title="GoAhead Exploit")
                selection = int(input("[-]Choose an option: "))
                print("[*]If the password dont work try with a blank space in the password field\n[*]If the password still dosent work or you think the output is wrong"
                  "\n[*]Just paste /system.ini?loginuse&loginpas after the host and download the config file for the system")
                if selection == 1:
                    goAhead.goAheadExploit(self)
            elif selection == 8:
                atlantis = ['Atlantis Exploit']
                menuBuilder.buildMenu(selectionArray=atlantis,title="Atlantis Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    atlantisExploit.atlantisBruteforce(self)
            elif selection == 9:
                ANPR = ['ANPR Default Creds Bruteforce']
                menuBuilder.buildMenu(selectionArray=ANPR,title="ANPR Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 2:
                    anprExploit.anprDefaultCreds(self)
            elif selection == 10:
                rtsp = ['RTSP generic tester']
                menuBuilder.buildMenu(selectionArray=rtsp, title="RTSP generic Exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    rtspGeneric.rtspGenericTester(self)
        elif selection == 2:
            menuBuilder.buildMenu(selectionArray=vpnsExploitSelection,title="VPNs or IoT device Exploit Menu")
            selection = int(input("[-]Choose an option: "))
            if selection == 1:
                fortExploit.fortExploit(self)
            elif selection == 2:
                samip =['BruteForce default credentials','Samip RCE shell exploit (beta testing)']
                menuBuilder.buildMenu(selectionArray=samip,title="Samip exploit")
                selection = int(input("[-]Choose an option: "))
                if selection == 1:
                    SamipExploit.samipBruteForce(self)
                elif selection == 2:
                    SamipExploit.samipRCEexploit(self)


